apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fastapi.fullname" . }}
  labels:
    {{- include "fastapi.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fastapi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fastapi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fastapi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: "fastapi"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.service.healthCheckPath }}
              port: {{ .Values.service.containerPort }}
          readinessProbe:
            httpGet:
              path: {{ .Values.service.healthCheckPath }}
              port: {{ .Values.service.containerPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: [ "uvicorn" ]
          args: [ "main:app", "--host", "0.0.0.0", "--port", {{ .Values.service.containerPort | quote }} ]
          env:
            {{- $configmapName := include "fastapi.configmapName" . -}}
            {{- range $key, $val := .Values.application.envs }}
            - name: {{ $key | snakecase | upper }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $configmapName }}
                  key: {{ $key }}
            {{- end }}
            {{- if .Values.application.googleServiceAccountSecret }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/keys/service-account.json"
            {{- end }}
          {{- if .Values.application.googleServiceAccountSecret }}
          volumeMounts:
          - name: google-service-account
            mountPath: /keys
            readOnly: true
          {{- end }}
      {{- if .Values.application.googleServiceAccountSecret }}
      volumes:
        {{- include "fastapi.google_service_account" . | indent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
